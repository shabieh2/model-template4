import * as pulumi from "@pulumi/pulumi";
import { input as inputs } from "../types";
import * as pulumiAws from "@pulumi/aws";
/**
 * Provides a Network Load Balancer resource with listeners and default target group.
 */
export declare class NetworkLoadBalancer extends pulumi.ComponentResource {
    /**
     * Returns true if the given object is an instance of NetworkLoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NetworkLoadBalancer;
    /**
     * Default target group, if auto-created
     */
    readonly defaultTargetGroup: pulumi.Output<pulumiAws.lb.TargetGroup>;
    /**
     * Listeners created as part of this load balancer
     */
    readonly listeners: pulumi.Output<pulumiAws.lb.Listener[] | undefined>;
    /**
     * Underlying Load Balancer resource
     */
    readonly loadBalancer: pulumi.Output<pulumiAws.lb.LoadBalancer>;
    /**
     * Id of the VPC in which this load balancer is operating
     */
    readonly vpcId: pulumi.Output<string | undefined>;
    /**
     * Create a NetworkLoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NetworkLoadBalancerArgs, opts?: pulumi.ComponentResourceOptions);
}
/**
 * The set of arguments for constructing a NetworkLoadBalancer resource.
 */
export interface NetworkLoadBalancerArgs {
    /**
     * An Access Logs block. Access Logs documented below.
     */
    accessLogs?: pulumi.Input<pulumiAws.types.input.lb.LoadBalancerAccessLogs>;
    /**
     * The ID of the customer owned ipv4 pool to use for this load balancer.
     */
    customerOwnedIpv4Pool?: pulumi.Input<string>;
    /**
     * Options creating a default target group.
     */
    defaultTargetGroup?: inputs.lb.TargetGroupArgs;
    /**
     * Port to use to connect with the target. Valid values are ports 1-65535. Defaults to 80.
     */
    defaultTargetGroupPort?: pulumi.Input<number>;
    /**
     * Determines how the load balancer handles requests that might pose a security risk to an application due to HTTP desync. Valid values are `monitor`, `defensive` (default), `strictest`.
     */
    desyncMitigationMode?: pulumi.Input<string>;
    /**
     * Indicates whether HTTP headers with header fields that are not valid are removed by the load balancer (true) or routed to targets (false). The default is false. Elastic Load Balancing requires that message header names contain only alphanumeric characters and hyphens. Only valid for Load Balancers of type `application`.
     */
    dropInvalidHeaderFields?: pulumi.Input<boolean>;
    /**
     * If true, cross-zone load balancing of the load balancer will be enabled.
     * This is a `network` load balancer feature. Defaults to `false`.
     */
    enableCrossZoneLoadBalancing?: pulumi.Input<boolean>;
    /**
     * If true, deletion of the load balancer will be disabled via
     * the AWS API. This will prevent this provider from deleting the load balancer. Defaults to `false`.
     */
    enableDeletionProtection?: pulumi.Input<boolean>;
    /**
     * Indicates whether to allow a WAF-enabled load balancer to route requests to targets if it is unable to forward the request to AWS WAF. Defaults to `false`.
     */
    enableWafFailOpen?: pulumi.Input<boolean>;
    /**
     * The time in seconds that the connection is allowed to be idle. Only valid for Load Balancers of type `application`. Default: 60.
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * If true, the LB will be internal.
     */
    internal?: pulumi.Input<boolean>;
    /**
     * The type of IP addresses used by the subnets for your load balancer. The possible values are `ipv4` and `dualstack`
     */
    ipAddressType?: pulumi.Input<string>;
    /**
     * A listener to create. Only one of [listener] and [listeners] can be specified.
     */
    listener?: inputs.lb.ListenerArgs;
    /**
     * List of listeners to create. Only one of [listener] and [listeners] can be specified.
     */
    listeners?: inputs.lb.ListenerArgs[];
    /**
     * The name of the LB. This name must be unique within your AWS account, can have a maximum of 32 characters,
     * must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen. If not specified,
     * this provider will autogenerate a name beginning with `tf-lb`.
     */
    name?: pulumi.Input<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     */
    namePrefix?: pulumi.Input<string>;
    /**
     * Indicates whether the Application Load Balancer should preserve the Host header in the HTTP request and send it to the target without any change. Defaults to `false`.
     */
    preserveHostHeader?: pulumi.Input<boolean>;
    /**
     * A list of subnet IDs to attach to the LB. Subnets
     * cannot be updated for Load Balancers of type `network`. Changing this value
     * for load balancers of type `network` will force a recreation of the resource.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A subnet mapping block as documented below.
     */
    subnetMappings?: pulumi.Input<pulumi.Input<pulumiAws.types.input.lb.LoadBalancerSubnetMapping>[]>;
    /**
     * A list of subnets to attach to the LB. Only one of [subnets], [subnetIds] or [subnetMappings] can be specified
     */
    subnets?: pulumi.Input<pulumi.Input<pulumiAws.ec2.Subnet>[]>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
