"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.OutboundConnection = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an AWS Opensearch Outbound Connection.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const currentCallerIdentity = aws.getCallerIdentity({});
 * const currentRegion = aws.getRegion({});
 * const foo = new aws.opensearch.OutboundConnection("foo", {
 *     connectionAlias: "outbound_connection",
 *     localDomainInfo: {
 *         ownerId: currentCallerIdentity.then(currentCallerIdentity => currentCallerIdentity.accountId),
 *         region: currentRegion.then(currentRegion => currentRegion.name),
 *         domainName: aws_opensearch_domain.local_domain.domain_name,
 *     },
 *     remoteDomainInfo: {
 *         ownerId: currentCallerIdentity.then(currentCallerIdentity => currentCallerIdentity.accountId),
 *         region: currentRegion.then(currentRegion => currentRegion.name),
 *         domainName: aws_opensearch_domain.remote_domain.domain_name,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * AWS Opensearch Outbound Connections can be imported by using the Outbound Connection ID, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:opensearch/outboundConnection:OutboundConnection foo connection-id
 * ```
 */
class OutboundConnection extends pulumi.CustomResource {
    /**
     * Get an existing OutboundConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new OutboundConnection(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of OutboundConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OutboundConnection.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["connectionAlias"] = state ? state.connectionAlias : undefined;
            resourceInputs["connectionStatus"] = state ? state.connectionStatus : undefined;
            resourceInputs["localDomainInfo"] = state ? state.localDomainInfo : undefined;
            resourceInputs["remoteDomainInfo"] = state ? state.remoteDomainInfo : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.connectionAlias === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionAlias'");
            }
            if ((!args || args.localDomainInfo === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localDomainInfo'");
            }
            if ((!args || args.remoteDomainInfo === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remoteDomainInfo'");
            }
            resourceInputs["connectionAlias"] = args ? args.connectionAlias : undefined;
            resourceInputs["localDomainInfo"] = args ? args.localDomainInfo : undefined;
            resourceInputs["remoteDomainInfo"] = args ? args.remoteDomainInfo : undefined;
            resourceInputs["connectionStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OutboundConnection.__pulumiType, name, resourceInputs, opts);
    }
}
exports.OutboundConnection = OutboundConnection;
/** @internal */
OutboundConnection.__pulumiType = 'aws:opensearch/outboundConnection:OutboundConnection';
//# sourceMappingURL=outboundConnection.js.map